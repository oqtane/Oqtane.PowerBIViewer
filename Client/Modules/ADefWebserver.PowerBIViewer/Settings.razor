@namespace Oqtane.PowerBIViewer
@inherits ModuleBase
@inject ISettingService SettingService
@inject IStringLocalizer<Settings> Localizer

<div class="container">
    <div class="row mb-1 align-items-center">
        <div class="container">
            <div class="row mb-1 align-items-center">
                <Label Class="col-sm-3" For="applicationId" HelpText="Enter the Application ID" ResourceKey="ApplicationId" ResourceType="@resourceType">Application ID: </Label>
                <div class="col-sm-9">
                    <input id="applicationId" type="text" class="form-control" @bind="@_ApplicationId" />
                </div>
            </div>
            <div class="row mb-1 align-items-center">
                <Label Class="col-sm-3" For="applicationSecret" HelpText="Enter the Application Secret" ResourceKey="ApplicationSecret" ResourceType="@resourceType">Application Secret: </Label>
                <div class="col-sm-9">
                    <input id="applicationSecret" type="text" class="form-control" @bind="@_ApplicationSecret" />
                </div>
            </div>
            <div class="row mb-1 align-items-center">
                <Label Class="col-sm-3" For="tenantId" HelpText="Enter the Tenant ID" ResourceKey="TenantId" ResourceType="@resourceType">Tenant ID: </Label>
                <div class="col-sm-9">
                    <input id="tenantId" type="text" class="form-control" @bind="@_TenantId" />
                </div>
            </div>
            <div class="row mb-1 align-items-center">
                <Label Class="col-sm-3" For="workspaceId" HelpText="Enter the Workspace ID" ResourceKey="WorkspaceId" ResourceType="@resourceType">Workspace ID: </Label>
                <div class="col-sm-9">
                    <input id="workspaceId" type="text" class="form-control" @bind="@_WorkspaceId" />
                </div>
            </div>
            <div class="row mb-1 align-items-center">
                <Label Class="col-sm-3" For="reportId" HelpText="Enter the Report ID" ResourceKey="ReportId" ResourceType="@resourceType">Report ID: </Label>
                <div class="col-sm-9">
                    <input id="reportId" type="text" class="form-control" @bind="@_ReportId" />
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string resourceType = "Oqtane.PowerBIViewer.Settings, Oqtane.PowerBIViewer.Client.Oqtane"; // for localization
    public override string Title => "PowerBIViewer Settings";

    string _ApplicationId;
    string _ApplicationSecret;
    string _TenantId;
    string _WorkspaceId;
    string _ReportId;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Dictionary<string, string> settings = await SettingService.GetModuleSettingsAsync(ModuleState.ModuleId);
            _ApplicationId = SettingService.GetSetting(settings, "ApplicationId", "");
            _ApplicationSecret = SettingService.GetSetting(settings, "ApplicationSecret", "");
            _TenantId = SettingService.GetSetting(settings, "TenantId", "");
            _WorkspaceId = SettingService.GetSetting(settings, "WorkspaceId", "");
            _ReportId = SettingService.GetSetting(settings, "ReportId", "");
        }
        catch (Exception ex)
        {
            ModuleInstance.AddModuleMessage(ex.Message, MessageType.Error);
        }
    }

    public async Task UpdateSettings()
    {
        try
        {
            Dictionary<string, string> settings = await SettingService.GetModuleSettingsAsync(ModuleState.ModuleId);
            SettingService.SetSetting(settings, "ApplicationId", _ApplicationId);
            SettingService.SetSetting(settings, "ApplicationSecret", _ApplicationSecret);
            SettingService.SetSetting(settings, "TenantId", _TenantId);
            SettingService.SetSetting(settings, "WorkspaceId", _WorkspaceId);
            SettingService.SetSetting(settings, "ReportId", _ReportId);

            await SettingService.UpdateModuleSettingsAsync(settings, ModuleState.ModuleId);
        }
        catch (Exception ex)
        {
            ModuleInstance.AddModuleMessage(ex.Message, MessageType.Error);
        }
    }
}
